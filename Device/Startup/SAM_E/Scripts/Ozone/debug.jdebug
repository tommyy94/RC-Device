void enableTraceClock(void)
{  
  unsigned int ABCDSR0;
  unsigned int ABCDSR1;
  
  /* Trace clock setup */
  Util.Log("Enable ETM clock.");
  Target.WriteU32(0x400E06E4, 0x504D4300);   /* Disable PMC Write Protection */
  Target.WriteU32(0x400E0650, 0x00000004);   /* Select Master clock */
  Target.WriteU32(0x400E0600, (1 << 11));	 /* Enable ETM clock (PCK3) */
  Target.WriteU32(0x400E0610, (1 << 16));	 /* Enable PIOD clock */
  
  /* Trace Pin setup */
  Target.WriteU32(0x400E14E4, 0x50494F00);	 /* Disable PIOD Write Protection */
  Target.WriteU32(0x400E1404, 0x000001F0);   /* Disable peripherals PD04..PD08 */
  ABCDSR0 = Target.ReadU32(0x400E1470);		 /* Write ABCDSR0 & ABCDSR1 selecting */
  ABCDSR1 = Target.ReadU32(0x400E1474);		 /* Peripheral C for PD04..PD07 */
  ABCDSR0 = ABCDSR0 & (~0x0F0) | 0x100;		 /* and Peripheral D for PD08 */
  ABCDSR1 = ABCDSR1 | 0x100;
  Target.WriteU32(0x400E1470, ABCDSR0);
  Target.WriteU32(0x400E1474, ABCDSR1);
}

/*********************************************************************
*                                                                     
*       OnProjectLoad                                                 
*                                                                     
* Function description                                                
*   Project load routine. Required.                                   
*                                                                     
**********************************************************************
*/                                                                    
void OnProjectLoad (void) {
  //
  // Dialog-generated settings
  //
  Project.SetTraceSource ("Trace Pins");
  Project.SetDevice ("ATSAME70Q21");
  Project.SetHostIF ("IP", "192.168.10.5");
  Project.SetTargetIF ("SWD");
  Project.SetTIFSpeed ("Automatic");
  Project.AddSvdFile ("Cortex-M7F.svd");
  Project.AddSvdFile ("$(InstallDir)/Config/Peripherals/ARMv7M.svd");
  Project.AddSvdFile ("$(InstallDir)/Config/Peripherals/ATSAME70Q21.svd");
  Project.AddPathSubstitute ("/home/tommy/Documents/CrossWorks Projects/Executable_1/Device/Startup/SAM_E/Scripts/Segger Ozone", "$(ProjectDir)");
  Project.AddPathSubstitute ("/home/tommy/documents/crossworks projects/executable_1/device/startup/sam_e/scripts/segger ozone", "$(ProjectDir)");
  //
  // User settings
  //
  Edit.SysVar (VAR_TRACE_MAX_INST_CNT, 100000000);
  Edit.SysVar (VAR_TRACE_CORE_CLOCK, 300000000);
  //File.Open ("/home/tommy/Documents/CrossWorks Projects/Executable_1/Device/bin/Clang Debug/Device.elf");
  File.Open ("/home/tommy/Documents/CrossWorks Projects/Executable_1/Device/bin/GCC Debug/Device.elf");
  Project.SetOSPlugin("FreeRTOSPlugin_CM7");
}

/*********************************************************************
*                                                                     
*      TargetReset                                                    
*                                                                     
* Function description                                                
*   Replaces the default target device reset routine. Optional.       
*                                                                     
* Notes                                                               
*   This example demonstrates the usage when                          
*   debugging a RAM program on a Cortex-M target device               
*                                                                     
**********************************************************************
*/                                                                    
//void TargetReset (void) {                                           
//                                                                    
//  unsigned int SP;                                                  
//  unsigned int PC;                                                  
//  unsigned int VectorTableAddr;                                     
//                                                                    
//  Exec.Reset();                                                     
//                                                                    
//  VectorTableAddr = Elf.GetBaseAddr();                              
//                                                                    
//  if (VectorTableAddr != 0xFFFFFFFF) {                              
//                                                                    
//    Util.Log("Resetting Program.");                               
//                                                                    
//    SP = Target.ReadU32(VectorTableAddr);                           
//    Target.SetReg("SP", SP);                                      
//                                                                    
//    PC = Target.ReadU32(VectorTableAddr + 4);                       
//    Target.SetReg("PC", PC);                                      
//  }                                                                 
//}                                                                   

/*********************************************************************
*                                                                     
*       BeforeTargetReset                                             
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void BeforeTargetReset (void) {                                     
//}                                                                   

/*********************************************************************
*                                                                     
*       AfterTargetReset                                              
*                                                                     
* Function description                                                
*   Event handler routine.                                            
*    - Sets the PC register to program reset value.                   
*    - Sets the SP register to program reset value on Cortex-M.       
*                                                                     
**********************************************************************
*/                                                                    
void AfterTargetReset (void) {
  unsigned int SP;                                                
  unsigned int PC;                                                
  unsigned int VectorTableAddr;
                                                                  
  VectorTableAddr = Elf.GetBaseAddr();                            
                                                                  
  if (VectorTableAddr == 0xFFFFFFFF) {                            
    Util.Log("Project file error: failed to get program base"); 
  } else {                                                        
    SP = Target.ReadU32(VectorTableAddr);                         
    Target.SetReg("SP", SP);                                    
                                                                  
    PC = Target.ReadU32(VectorTableAddr + 4);                     
    Target.SetReg("PC", PC);                                    
  }
  
  /* Disable both watchdogs */
  Util.Log("Disable both watchdogs.");
  Target.WriteU32(0x400E1854, 0x3FFFAFFF);
  Target.WriteU32(0x400E1904, 0x3FFFAFFF);  
  
  //enableTraceClock();
}

/*********************************************************************
*                                                                     
*       DebugStart                                                    
*                                                                     
* Function description                                                
*   Replaces the default debug session startup routine. Optional.     
*                                                                     
**********************************************************************
*/                                                                    
//void DebugStart (void) {                                            
//}                                                                   

/*********************************************************************
*                                                                     
*       TargetConnect                                                 
*                                                                     
* Function description                                                
*   Replaces the default target IF connection routine. Optional.      
*                                                                     
**********************************************************************
*/                                                                    
//void TargetConnect (void) {                                         
//}                                                                   

/*********************************************************************
*                                                                     
*       BeforeTargetConnect                                           
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
void BeforeTargetConnect (void) {   
  Project.SetJLinkScript("./JLinkScript.pex");                                 
}                                                                   

/*********************************************************************
*                                                                     
*       AfterTargetConnect                                            
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void AfterTargetConnect (void) {                                    
//}                                                                   

/*********************************************************************
*                                                                     
*       TargetDownload                                                
*                                                                     
* Function description                                                
*   Replaces the default program download routine. Optional.          
*                                                                     
**********************************************************************
*/                                                                    
//void TargetDownload (void) {                                        
//}                                                                   

/*********************************************************************
*                                                                     
*       BeforeTargetDownload                                          
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void BeforeTargetDownload (void) {                                  
//}                                                                   

/*********************************************************************
*                                                                     
*      AfterTargetDownload                                            
*                                                                     
* Function description                                                
*   Event handler routine.                                            
*    - Sets the PC register to program reset value.                   
*    - Sets the SP register to program reset value on Cortex-M.       
*                                                                     
**********************************************************************
*/   
/*                                                                 
void AfterTargetDownload (void) {
  unsigned int SP;                                                
  unsigned int PC;                                                
  unsigned int VectorTableAddr;                                   
                                                                  
  VectorTableAddr = Elf.GetBaseAddr();                            
                                                                  
  if (VectorTableAddr == 0xFFFFFFFF) {                            
    Util.Log("Project file error: failed to get program base"); 
  } else {                                                        
    SP = Target.ReadU32(VectorTableAddr);                         
    Target.SetReg("SP", SP);                                    
                                                                  
    PC = Target.ReadU32(VectorTableAddr + 4);                     
    Target.SetReg("PC", PC);                                    
  }
}
*/

/*********************************************************************
*                                                                     
*       BeforeTargetDisconnect                                        
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void BeforeTargetDisconnect (void) {                                
//}                                                                   

/*********************************************************************
*                                                                     
*       AfterTargetDisconnect                                         
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void AfterTargetDisconnect (void) {                                 
//}                                                                   

/*********************************************************************
*                                                                     
*       AfterTargetHalt                                               
*                                                                     
* Function description                                                
*   Event handler routine. Optional.                                  
*                                                                     
**********************************************************************
*/                                                                    
//void AfterTargetHalt (void) {                                       
//}                                                                   
